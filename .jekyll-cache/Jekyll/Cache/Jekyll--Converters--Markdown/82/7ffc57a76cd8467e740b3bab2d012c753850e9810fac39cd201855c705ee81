I"
<p>Bash is the default Unix shell installed on the majority of Linux distributions. Like any other shell, Bash uses a command-line interface (CLI) so its users can utilize the operating system. Therefore, knowledge of Bash’s CLI is necessary for working with most Linux systems. This post covers the basics of Bash and the shell’s CLI.</p>

<h2 id="command-overview">Command Overview</h2>
<p>Before diving into Bash specifics, here is a quick summary of some useful Unix-like commands.</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">pwd</code> prints the working directory. (The directory the user is currently in).</li>
  <li><code class="language-plaintext highlighter-rouge">ls</code> lists directory contents.</li>
  <li><code class="language-plaintext highlighter-rouge">cd</code> change directory, used to move around the filesystem.</li>
  <li><code class="language-plaintext highlighter-rouge">cat</code> concatenate files and print standard output (stdout).</li>
  <li><code class="language-plaintext highlighter-rouge">grep</code> search for patterns in a file using regex.</li>
  <li><code class="language-plaintext highlighter-rouge">find</code> search for files within a filesystem.</li>
  <li><code class="language-plaintext highlighter-rouge">file</code> determine file type.</li>
</ul>

<h2 id="arguments">Arguments</h2>
<p>A command is split into an array of strings named arguments. Normally, argument 0 is the command name. Argument 1 is the first element following argument 0 (the command), and so on.</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#long list all files in /tmp and /var/tmp</span>
<span class="nv">$ </span><span class="nb">ls</span> <span class="nt">-la</span> /tmp /var/tmp 
arg0 <span class="o">=</span> <span class="nb">ls
</span>arg1 <span class="o">=</span> <span class="nt">-la</span>
arg2 <span class="o">=</span> /tmp
arg3 <span class="o">=</span> /var/tmp
</code></pre></div></div>

<p>An option is a type of argument modifying the behavior of a command. For example <code class="language-plaintext highlighter-rouge">-l</code> commonly means “long”, <code class="language-plaintext highlighter-rouge">-a</code> means “all”. <code class="language-plaintext highlighter-rouge">-la</code> are two options combined in a single argument.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ ls -la /tmp /var/tmp
option1= -l
option2= -a

</code></pre></div></div>

:ET